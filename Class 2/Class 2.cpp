#include <iostream>
using namespace std;

class tollBooth {
public: 
	unsigned int amountCars;
	double amountPay;
};

//void payingCar() {
//	tollBooth amountPay;
//	amountPay.amountPay += 0.5;
//}
//
//void noPayCar() {
//	tollBooth amountCars;
//	amountCars.amountCars++;
//}

int main()
{
	setlocale(LC_CTYPE, "rus");
	unsigned int cars;
	cout << "Введите количество проехавших за день машин: ";
	cin >> cars;
	tollBooth Pay;
	Pay.amountPay = cars;
	Pay.amountPay = Pay.amountPay / 2;
	cout << "Кол-во машин: " << cars << endl;
	cout << "Выручка: " << Pay.amountPay;
}
/*
Представьте пункт для взимания платежей за проезд по автостраде. Каж-
дая проезжающая машина должна заплатить за проезд 50 центов, однако
часть машин платит за проезд, а часть проезжает бесплатно. В кассе ведет-
ся учет числа проехавших машин и суммарная выручка от платы за проезд.
Создайте модель такой кассы с помощью класса tollBooth. Класс должен
содержать два поля. Одно из них, типа unsigned int, предназначено для
учета количества проехавших автомобилей, а второе, имеющее тип double,
будет содержать суммарную выручку от оплаты проезда. Конструктор дол-
жен инициализировать оба поля нулевыми значениями. Метод payingCar()
инкрементирует число машин и увеличивает на 0.50 суммарную выручку.
Другой метод, nopayCar(), увеличивает на единицу число автомобилей, но
оставляет без изменения выручку. Метод display() выводит оба значения
на экран. Там, где это возможно, сделайте методы константными.
Создайте программу, которая продемонстрирует работу класса. Програм-
ма должна предложить пользователю нажать одну клавишу для того, что-
бы сымитировать заплатившего автолюбителя, и другую клавишу, чтобы
сымитировать недобросовестного водителя. Нажатие клавиши Esc должно
привести к выдаче текущих значений количества машин и выручки и за-
вершению программы.
*/